name: Release

on:
  push:
    branches:
      - 'release-*'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Changesets Release
    runs-on: ubuntu-latest
    steps:
      # - name: Cancel Previous Runs
      #   uses: styfle/cancel-workflow-action@0.11.0

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: âŽ” Setup Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install dependencies (with cache)
        uses: bahmutov/npm-install@v1

      - name: Enter Prerelease mode if on release branch
        # if: ${{ github.ref != 'refs/heads/main' }}
        # if .changeset/pre.json does not exist, enter
        # prerelease mode with tag alpha
        run: |
          [ ! -f .changeset/pre.json && !contains(github.event.head_commit.message, 'Exit prerelease') ] \
            && npx changeset pre enter alpha \
            || echo 'Already in pre mode or exited pre mode by most recent commit'

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run changeset-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo
        run: |
          echo '${{ steps.changesets.outputs }}'

      - name: Publish
        # if: steps.changesets.outputs.hasChangesets == 'true'
        if: '! test -f .changeset/pre.json'
        # if: [ ! -f .changeset/pre.json ]
        # You can do something when a publish should happen.
        run: npm run changeset-publish

      # - name: Create Release PR or Publish to npm + GitHub
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     version: npx changeset version && npm install
      #     publish: npx changeset publish
      #     createGithubReleases: ${{ github.ref == 'refs/heads/main' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a Slack notification on Publish
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: echo "Send message to Slack"
